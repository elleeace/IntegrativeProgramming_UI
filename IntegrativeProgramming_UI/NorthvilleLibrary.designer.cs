#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IntegrativeProgramming_UI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NorthvilleLibraryV2")]
	public partial class NorthvilleLibraryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertattendance(attendance instance);
    partial void Updateattendance(attendance instance);
    partial void Deleteattendance(attendance instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertbook(book instance);
    partial void Updatebook(book instance);
    partial void Deletebook(book instance);
    partial void Insertbook_copy(book_copy instance);
    partial void Updatebook_copy(book_copy instance);
    partial void Deletebook_copy(book_copy instance);
    partial void Insertbook_edition(book_edition instance);
    partial void Updatebook_edition(book_edition instance);
    partial void Deletebook_edition(book_edition instance);
    partial void Insertbook_genre(book_genre instance);
    partial void Updatebook_genre(book_genre instance);
    partial void Deletebook_genre(book_genre instance);
    partial void Insertbook_location(book_location instance);
    partial void Updatebook_location(book_location instance);
    partial void Deletebook_location(book_location instance);
    partial void Insertbook_status(book_status instance);
    partial void Updatebook_status(book_status instance);
    partial void Deletebook_status(book_status instance);
    partial void Insertcourse(course instance);
    partial void Updatecourse(course instance);
    partial void Deletecourse(course instance);
    partial void Insertstudent(student instance);
    partial void Updatestudent(student instance);
    partial void Deletestudent(student instance);
    partial void Insertfine(fine instance);
    partial void Updatefine(fine instance);
    partial void Deletefine(fine instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertborrow_transaction(borrow_transaction instance);
    partial void Updateborrow_transaction(borrow_transaction instance);
    partial void Deleteborrow_transaction(borrow_transaction instance);
    #endregion
		
		public NorthvilleLibraryDataContext() : 
				base(global::IntegrativeProgramming_UI.Properties.Settings.Default.NorthvilleLibraryV2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibraryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibraryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibraryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public NorthvilleLibraryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<attendance> attendances
		{
			get
			{
				return this.GetTable<attendance>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<book> books
		{
			get
			{
				return this.GetTable<book>();
			}
		}
		
		public System.Data.Linq.Table<book_copy> book_copies
		{
			get
			{
				return this.GetTable<book_copy>();
			}
		}
		
		public System.Data.Linq.Table<book_edition> book_editions
		{
			get
			{
				return this.GetTable<book_edition>();
			}
		}
		
		public System.Data.Linq.Table<book_genre> book_genres
		{
			get
			{
				return this.GetTable<book_genre>();
			}
		}
		
		public System.Data.Linq.Table<book_location> book_locations
		{
			get
			{
				return this.GetTable<book_location>();
			}
		}
		
		public System.Data.Linq.Table<book_status> book_status
		{
			get
			{
				return this.GetTable<book_status>();
			}
		}
		
		public System.Data.Linq.Table<course> courses
		{
			get
			{
				return this.GetTable<course>();
			}
		}
		
		public System.Data.Linq.Table<student> students
		{
			get
			{
				return this.GetTable<student>();
			}
		}
		
		public System.Data.Linq.Table<vw_AvailableBook> vw_AvailableBooks
		{
			get
			{
				return this.GetTable<vw_AvailableBook>();
			}
		}
		
		public System.Data.Linq.Table<vw_visit_log> vw_visit_logs
		{
			get
			{
				return this.GetTable<vw_visit_log>();
			}
		}
		
		public System.Data.Linq.Table<vw_fines_report> vw_fines_reports
		{
			get
			{
				return this.GetTable<vw_fines_report>();
			}
		}
		
		public System.Data.Linq.Table<vw_StudentBorrowHistory> vw_StudentBorrowHistories
		{
			get
			{
				return this.GetTable<vw_StudentBorrowHistory>();
			}
		}
		
		public System.Data.Linq.Table<vw_OverdueBook> vw_OverdueBooks
		{
			get
			{
				return this.GetTable<vw_OverdueBook>();
			}
		}
		
		public System.Data.Linq.Table<fine> fines
		{
			get
			{
				return this.GetTable<fine>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<borrow_transaction> borrow_transactions
		{
			get
			{
				return this.GetTable<borrow_transaction>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="NorthvilleLibrary.usp_AddUser")]
		public int usp_AddUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string user_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(256)")] string user_password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(256)")] string user_hash, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string user_role, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> is_active, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> is_new, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> created_at)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id, username, user_password, user_hash, user_role, is_active, is_new, created_at);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="NorthvilleLibrary.usp_AddNewBookWithCopies")]
		public int usp_AddNewBookWithCopies([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string book_title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(100)")] string book_author, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string book_genre_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string book_format, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string isbn, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> edition_number, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> publication_year, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string location_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> number_of_copies)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), book_title, book_author, book_genre_id, book_format, isbn, edition_number, publication_year, location_id, number_of_copies);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="NorthvilleLibrary.usp_BorrowBook")]
		public int usp_BorrowBook([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string student_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string book_copy_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), student_id, book_copy_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="NorthvilleLibrary.usp_ReturnBook")]
		public int usp_ReturnBook([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string borrow_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> return_date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), borrow_id, return_date);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="NorthvilleLibrary.usp_RecordVisit")]
		public int usp_RecordVisit([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string attendance_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string student_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date_of_visit, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Time")] System.Nullable<System.TimeSpan> time_of_visit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), attendance_id, student_id, date_of_visit, time_of_visit);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.attendance")]
	public partial class attendance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _attendance_id;
		
		private string _student_id;
		
		private System.DateTime _date_of_visit;
		
		private System.TimeSpan _time_of_visit;
		
		private EntityRef<student> _student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onattendance_idChanging(string value);
    partial void Onattendance_idChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void Ondate_of_visitChanging(System.DateTime value);
    partial void Ondate_of_visitChanged();
    partial void Ontime_of_visitChanging(System.TimeSpan value);
    partial void Ontime_of_visitChanged();
    #endregion
		
		public attendance()
		{
			this._student = default(EntityRef<student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendance_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string attendance_id
		{
			get
			{
				return this._attendance_id;
			}
			set
			{
				if ((this._attendance_id != value))
				{
					this.Onattendance_idChanging(value);
					this.SendPropertyChanging();
					this._attendance_id = value;
					this.SendPropertyChanged("attendance_id");
					this.Onattendance_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_visit", DbType="Date NOT NULL")]
		public System.DateTime date_of_visit
		{
			get
			{
				return this._date_of_visit;
			}
			set
			{
				if ((this._date_of_visit != value))
				{
					this.Ondate_of_visitChanging(value);
					this.SendPropertyChanging();
					this._date_of_visit = value;
					this.SendPropertyChanged("date_of_visit");
					this.Ondate_of_visitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_visit", DbType="Time NOT NULL")]
		public System.TimeSpan time_of_visit
		{
			get
			{
				return this._time_of_visit;
			}
			set
			{
				if ((this._time_of_visit != value))
				{
					this.Ontime_of_visitChanging(value);
					this.SendPropertyChanging();
					this._time_of_visit = value;
					this.SendPropertyChanged("time_of_visit");
					this.Ontime_of_visitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_attendance", Storage="_student", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.attendances.Remove(this);
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.attendances.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(string);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _user_id;
		
		private string _username;
		
		private string _user_password;
		
		private string _user_hash;
		
		private string _user_role;
		
		private bool _is_active;
		
		private bool _is_new;
		
		private System.DateTime _created_at;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(string value);
    partial void Onuser_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onuser_passwordChanging(string value);
    partial void Onuser_passwordChanged();
    partial void Onuser_hashChanging(string value);
    partial void Onuser_hashChanged();
    partial void Onuser_roleChanging(string value);
    partial void Onuser_roleChanged();
    partial void Onis_activeChanging(bool value);
    partial void Onis_activeChanged();
    partial void Onis_newChanging(bool value);
    partial void Onis_newChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_password", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string user_password
		{
			get
			{
				return this._user_password;
			}
			set
			{
				if ((this._user_password != value))
				{
					this.Onuser_passwordChanging(value);
					this.SendPropertyChanging();
					this._user_password = value;
					this.SendPropertyChanged("user_password");
					this.Onuser_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_hash", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string user_hash
		{
			get
			{
				return this._user_hash;
			}
			set
			{
				if ((this._user_hash != value))
				{
					this.Onuser_hashChanging(value);
					this.SendPropertyChanging();
					this._user_hash = value;
					this.SendPropertyChanged("user_hash");
					this.Onuser_hashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_role", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string user_role
		{
			get
			{
				return this._user_role;
			}
			set
			{
				if ((this._user_role != value))
				{
					this.Onuser_roleChanging(value);
					this.SendPropertyChanging();
					this._user_role = value;
					this.SendPropertyChanged("user_role");
					this.Onuser_roleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_active", DbType="Bit NOT NULL")]
		public bool is_active
		{
			get
			{
				return this._is_active;
			}
			set
			{
				if ((this._is_active != value))
				{
					this.Onis_activeChanging(value);
					this.SendPropertyChanging();
					this._is_active = value;
					this.SendPropertyChanged("is_active");
					this.Onis_activeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_new", DbType="Bit NOT NULL")]
		public bool is_new
		{
			get
			{
				return this._is_new;
			}
			set
			{
				if ((this._is_new != value))
				{
					this.Onis_newChanging(value);
					this.SendPropertyChanging();
					this._is_new = value;
					this.SendPropertyChanged("is_new");
					this.Onis_newChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.book")]
	public partial class book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _book_id;
		
		private string _book_title;
		
		private string _book_author;
		
		private string _book_genre_id;
		
		private EntitySet<book_edition> _book_editions;
		
		private EntityRef<book_genre> _book_genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_idChanging(string value);
    partial void Onbook_idChanged();
    partial void Onbook_titleChanging(string value);
    partial void Onbook_titleChanged();
    partial void Onbook_authorChanging(string value);
    partial void Onbook_authorChanged();
    partial void Onbook_genre_idChanging(string value);
    partial void Onbook_genre_idChanged();
    #endregion
		
		public book()
		{
			this._book_editions = new EntitySet<book_edition>(new Action<book_edition>(this.attach_book_editions), new Action<book_edition>(this.detach_book_editions));
			this._book_genre = default(EntityRef<book_genre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this.Onbook_idChanging(value);
					this.SendPropertyChanging();
					this._book_id = value;
					this.SendPropertyChanged("book_id");
					this.Onbook_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this.Onbook_titleChanging(value);
					this.SendPropertyChanging();
					this._book_title = value;
					this.SendPropertyChanged("book_title");
					this.Onbook_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_author", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string book_author
		{
			get
			{
				return this._book_author;
			}
			set
			{
				if ((this._book_author != value))
				{
					this.Onbook_authorChanging(value);
					this.SendPropertyChanging();
					this._book_author = value;
					this.SendPropertyChanged("book_author");
					this.Onbook_authorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_genre_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_genre_id
		{
			get
			{
				return this._book_genre_id;
			}
			set
			{
				if ((this._book_genre_id != value))
				{
					if (this._book_genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbook_genre_idChanging(value);
					this.SendPropertyChanging();
					this._book_genre_id = value;
					this.SendPropertyChanged("book_genre_id");
					this.Onbook_genre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_book_edition", Storage="_book_editions", ThisKey="book_id", OtherKey="book_id")]
		public EntitySet<book_edition> book_editions
		{
			get
			{
				return this._book_editions;
			}
			set
			{
				this._book_editions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_genre_book", Storage="_book_genre", ThisKey="book_genre_id", OtherKey="book_genre_id", IsForeignKey=true)]
		public book_genre book_genre
		{
			get
			{
				return this._book_genre.Entity;
			}
			set
			{
				book_genre previousValue = this._book_genre.Entity;
				if (((previousValue != value) 
							|| (this._book_genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book_genre.Entity = null;
						previousValue.books.Remove(this);
					}
					this._book_genre.Entity = value;
					if ((value != null))
					{
						value.books.Add(this);
						this._book_genre_id = value.book_genre_id;
					}
					else
					{
						this._book_genre_id = default(string);
					}
					this.SendPropertyChanged("book_genre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_book_editions(book_edition entity)
		{
			this.SendPropertyChanging();
			entity.book = this;
		}
		
		private void detach_book_editions(book_edition entity)
		{
			this.SendPropertyChanging();
			entity.book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.book_copy")]
	public partial class book_copy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _book_copy_id;
		
		private string _book_edition_id;
		
		private string _book_status_id;
		
		private string _location_id;
		
		private EntitySet<borrow_transaction> _borrow_transactions;
		
		private EntityRef<book_edition> _book_edition;
		
		private EntityRef<book_location> _book_location;
		
		private EntityRef<book_status> _book_status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_copy_idChanging(string value);
    partial void Onbook_copy_idChanged();
    partial void Onbook_edition_idChanging(string value);
    partial void Onbook_edition_idChanged();
    partial void Onbook_status_idChanging(string value);
    partial void Onbook_status_idChanged();
    partial void Onlocation_idChanging(string value);
    partial void Onlocation_idChanged();
    #endregion
		
		public book_copy()
		{
			this._borrow_transactions = new EntitySet<borrow_transaction>(new Action<borrow_transaction>(this.attach_borrow_transactions), new Action<borrow_transaction>(this.detach_borrow_transactions));
			this._book_edition = default(EntityRef<book_edition>);
			this._book_location = default(EntityRef<book_location>);
			this._book_status = default(EntityRef<book_status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_copy_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string book_copy_id
		{
			get
			{
				return this._book_copy_id;
			}
			set
			{
				if ((this._book_copy_id != value))
				{
					this.Onbook_copy_idChanging(value);
					this.SendPropertyChanging();
					this._book_copy_id = value;
					this.SendPropertyChanged("book_copy_id");
					this.Onbook_copy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_edition_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_edition_id
		{
			get
			{
				return this._book_edition_id;
			}
			set
			{
				if ((this._book_edition_id != value))
				{
					if (this._book_edition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbook_edition_idChanging(value);
					this.SendPropertyChanging();
					this._book_edition_id = value;
					this.SendPropertyChanged("book_edition_id");
					this.Onbook_edition_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_status_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_status_id
		{
			get
			{
				return this._book_status_id;
			}
			set
			{
				if ((this._book_status_id != value))
				{
					if (this._book_status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbook_status_idChanging(value);
					this.SendPropertyChanging();
					this._book_status_id = value;
					this.SendPropertyChanged("book_status_id");
					this.Onbook_status_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._book_location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_copy_borrow_transaction", Storage="_borrow_transactions", ThisKey="book_copy_id", OtherKey="book_copy_id")]
		public EntitySet<borrow_transaction> borrow_transactions
		{
			get
			{
				return this._borrow_transactions;
			}
			set
			{
				this._borrow_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_edition_book_copy", Storage="_book_edition", ThisKey="book_edition_id", OtherKey="book_edition_id", IsForeignKey=true)]
		public book_edition book_edition
		{
			get
			{
				return this._book_edition.Entity;
			}
			set
			{
				book_edition previousValue = this._book_edition.Entity;
				if (((previousValue != value) 
							|| (this._book_edition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book_edition.Entity = null;
						previousValue.book_copies.Remove(this);
					}
					this._book_edition.Entity = value;
					if ((value != null))
					{
						value.book_copies.Add(this);
						this._book_edition_id = value.book_edition_id;
					}
					else
					{
						this._book_edition_id = default(string);
					}
					this.SendPropertyChanged("book_edition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_location_book_copy", Storage="_book_location", ThisKey="location_id", OtherKey="location_id", IsForeignKey=true)]
		public book_location book_location
		{
			get
			{
				return this._book_location.Entity;
			}
			set
			{
				book_location previousValue = this._book_location.Entity;
				if (((previousValue != value) 
							|| (this._book_location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book_location.Entity = null;
						previousValue.book_copies.Remove(this);
					}
					this._book_location.Entity = value;
					if ((value != null))
					{
						value.book_copies.Add(this);
						this._location_id = value.location_id;
					}
					else
					{
						this._location_id = default(string);
					}
					this.SendPropertyChanged("book_location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_status_book_copy", Storage="_book_status", ThisKey="book_status_id", OtherKey="book_status_id", IsForeignKey=true)]
		public book_status book_status
		{
			get
			{
				return this._book_status.Entity;
			}
			set
			{
				book_status previousValue = this._book_status.Entity;
				if (((previousValue != value) 
							|| (this._book_status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book_status.Entity = null;
						previousValue.book_copies.Remove(this);
					}
					this._book_status.Entity = value;
					if ((value != null))
					{
						value.book_copies.Add(this);
						this._book_status_id = value.book_status_id;
					}
					else
					{
						this._book_status_id = default(string);
					}
					this.SendPropertyChanged("book_status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_borrow_transactions(borrow_transaction entity)
		{
			this.SendPropertyChanging();
			entity.book_copy = this;
		}
		
		private void detach_borrow_transactions(borrow_transaction entity)
		{
			this.SendPropertyChanging();
			entity.book_copy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.book_edition")]
	public partial class book_edition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _book_edition_id;
		
		private string _book_id;
		
		private string _book_isbn;
		
		private string _book_format;
		
		private int _edition_number;
		
		private int _publication_year;
		
		private EntitySet<book_copy> _book_copies;
		
		private EntityRef<book> _book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_edition_idChanging(string value);
    partial void Onbook_edition_idChanged();
    partial void Onbook_idChanging(string value);
    partial void Onbook_idChanged();
    partial void Onbook_isbnChanging(string value);
    partial void Onbook_isbnChanged();
    partial void Onbook_formatChanging(string value);
    partial void Onbook_formatChanged();
    partial void Onedition_numberChanging(int value);
    partial void Onedition_numberChanged();
    partial void Onpublication_yearChanging(int value);
    partial void Onpublication_yearChanged();
    #endregion
		
		public book_edition()
		{
			this._book_copies = new EntitySet<book_copy>(new Action<book_copy>(this.attach_book_copies), new Action<book_copy>(this.detach_book_copies));
			this._book = default(EntityRef<book>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_edition_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string book_edition_id
		{
			get
			{
				return this._book_edition_id;
			}
			set
			{
				if ((this._book_edition_id != value))
				{
					this.Onbook_edition_idChanging(value);
					this.SendPropertyChanging();
					this._book_edition_id = value;
					this.SendPropertyChanged("book_edition_id");
					this.Onbook_edition_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					if (this._book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbook_idChanging(value);
					this.SendPropertyChanging();
					this._book_id = value;
					this.SendPropertyChanged("book_id");
					this.Onbook_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_isbn", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string book_isbn
		{
			get
			{
				return this._book_isbn;
			}
			set
			{
				if ((this._book_isbn != value))
				{
					this.Onbook_isbnChanging(value);
					this.SendPropertyChanging();
					this._book_isbn = value;
					this.SendPropertyChanged("book_isbn");
					this.Onbook_isbnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_format", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string book_format
		{
			get
			{
				return this._book_format;
			}
			set
			{
				if ((this._book_format != value))
				{
					this.Onbook_formatChanging(value);
					this.SendPropertyChanging();
					this._book_format = value;
					this.SendPropertyChanged("book_format");
					this.Onbook_formatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_edition_number", DbType="Int NOT NULL")]
		public int edition_number
		{
			get
			{
				return this._edition_number;
			}
			set
			{
				if ((this._edition_number != value))
				{
					this.Onedition_numberChanging(value);
					this.SendPropertyChanging();
					this._edition_number = value;
					this.SendPropertyChanged("edition_number");
					this.Onedition_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publication_year", DbType="Int NOT NULL")]
		public int publication_year
		{
			get
			{
				return this._publication_year;
			}
			set
			{
				if ((this._publication_year != value))
				{
					this.Onpublication_yearChanging(value);
					this.SendPropertyChanging();
					this._publication_year = value;
					this.SendPropertyChanged("publication_year");
					this.Onpublication_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_edition_book_copy", Storage="_book_copies", ThisKey="book_edition_id", OtherKey="book_edition_id")]
		public EntitySet<book_copy> book_copies
		{
			get
			{
				return this._book_copies;
			}
			set
			{
				this._book_copies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_book_edition", Storage="_book", ThisKey="book_id", OtherKey="book_id", IsForeignKey=true)]
		public book book
		{
			get
			{
				return this._book.Entity;
			}
			set
			{
				book previousValue = this._book.Entity;
				if (((previousValue != value) 
							|| (this._book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book.Entity = null;
						previousValue.book_editions.Remove(this);
					}
					this._book.Entity = value;
					if ((value != null))
					{
						value.book_editions.Add(this);
						this._book_id = value.book_id;
					}
					else
					{
						this._book_id = default(string);
					}
					this.SendPropertyChanged("book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_book_copies(book_copy entity)
		{
			this.SendPropertyChanging();
			entity.book_edition = this;
		}
		
		private void detach_book_copies(book_copy entity)
		{
			this.SendPropertyChanging();
			entity.book_edition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.book_genre")]
	public partial class book_genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _book_genre_id;
		
		private string _genre_name;
		
		private EntitySet<book> _books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_genre_idChanging(string value);
    partial void Onbook_genre_idChanged();
    partial void Ongenre_nameChanging(string value);
    partial void Ongenre_nameChanged();
    #endregion
		
		public book_genre()
		{
			this._books = new EntitySet<book>(new Action<book>(this.attach_books), new Action<book>(this.detach_books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_genre_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string book_genre_id
		{
			get
			{
				return this._book_genre_id;
			}
			set
			{
				if ((this._book_genre_id != value))
				{
					this.Onbook_genre_idChanging(value);
					this.SendPropertyChanging();
					this._book_genre_id = value;
					this.SendPropertyChanged("book_genre_id");
					this.Onbook_genre_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string genre_name
		{
			get
			{
				return this._genre_name;
			}
			set
			{
				if ((this._genre_name != value))
				{
					this.Ongenre_nameChanging(value);
					this.SendPropertyChanging();
					this._genre_name = value;
					this.SendPropertyChanged("genre_name");
					this.Ongenre_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_genre_book", Storage="_books", ThisKey="book_genre_id", OtherKey="book_genre_id")]
		public EntitySet<book> books
		{
			get
			{
				return this._books;
			}
			set
			{
				this._books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_books(book entity)
		{
			this.SendPropertyChanging();
			entity.book_genre = this;
		}
		
		private void detach_books(book entity)
		{
			this.SendPropertyChanging();
			entity.book_genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.book_location")]
	public partial class book_location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _location_id;
		
		private string _room_name;
		
		private string _shelf_code;
		
		private string _section_name;
		
		private string _loc_description;
		
		private EntitySet<book_copy> _book_copies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlocation_idChanging(string value);
    partial void Onlocation_idChanged();
    partial void Onroom_nameChanging(string value);
    partial void Onroom_nameChanged();
    partial void Onshelf_codeChanging(string value);
    partial void Onshelf_codeChanged();
    partial void Onsection_nameChanging(string value);
    partial void Onsection_nameChanged();
    partial void Onloc_descriptionChanging(string value);
    partial void Onloc_descriptionChanged();
    #endregion
		
		public book_location()
		{
			this._book_copies = new EntitySet<book_copy>(new Action<book_copy>(this.attach_book_copies), new Action<book_copy>(this.detach_book_copies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string room_name
		{
			get
			{
				return this._room_name;
			}
			set
			{
				if ((this._room_name != value))
				{
					this.Onroom_nameChanging(value);
					this.SendPropertyChanging();
					this._room_name = value;
					this.SendPropertyChanged("room_name");
					this.Onroom_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shelf_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string shelf_code
		{
			get
			{
				return this._shelf_code;
			}
			set
			{
				if ((this._shelf_code != value))
				{
					this.Onshelf_codeChanging(value);
					this.SendPropertyChanging();
					this._shelf_code = value;
					this.SendPropertyChanged("shelf_code");
					this.Onshelf_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string section_name
		{
			get
			{
				return this._section_name;
			}
			set
			{
				if ((this._section_name != value))
				{
					this.Onsection_nameChanging(value);
					this.SendPropertyChanging();
					this._section_name = value;
					this.SendPropertyChanged("section_name");
					this.Onsection_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loc_description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string loc_description
		{
			get
			{
				return this._loc_description;
			}
			set
			{
				if ((this._loc_description != value))
				{
					this.Onloc_descriptionChanging(value);
					this.SendPropertyChanging();
					this._loc_description = value;
					this.SendPropertyChanged("loc_description");
					this.Onloc_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_location_book_copy", Storage="_book_copies", ThisKey="location_id", OtherKey="location_id")]
		public EntitySet<book_copy> book_copies
		{
			get
			{
				return this._book_copies;
			}
			set
			{
				this._book_copies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_book_copies(book_copy entity)
		{
			this.SendPropertyChanging();
			entity.book_location = this;
		}
		
		private void detach_book_copies(book_copy entity)
		{
			this.SendPropertyChanging();
			entity.book_location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.book_status")]
	public partial class book_status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _book_status_id;
		
		private string _status_description;
		
		private EntitySet<book_copy> _book_copies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_status_idChanging(string value);
    partial void Onbook_status_idChanged();
    partial void Onstatus_descriptionChanging(string value);
    partial void Onstatus_descriptionChanged();
    #endregion
		
		public book_status()
		{
			this._book_copies = new EntitySet<book_copy>(new Action<book_copy>(this.attach_book_copies), new Action<book_copy>(this.detach_book_copies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_status_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string book_status_id
		{
			get
			{
				return this._book_status_id;
			}
			set
			{
				if ((this._book_status_id != value))
				{
					this.Onbook_status_idChanging(value);
					this.SendPropertyChanging();
					this._book_status_id = value;
					this.SendPropertyChanged("book_status_id");
					this.Onbook_status_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_description", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status_description
		{
			get
			{
				return this._status_description;
			}
			set
			{
				if ((this._status_description != value))
				{
					this.Onstatus_descriptionChanging(value);
					this.SendPropertyChanging();
					this._status_description = value;
					this.SendPropertyChanged("status_description");
					this.Onstatus_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_status_book_copy", Storage="_book_copies", ThisKey="book_status_id", OtherKey="book_status_id")]
		public EntitySet<book_copy> book_copies
		{
			get
			{
				return this._book_copies;
			}
			set
			{
				this._book_copies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_book_copies(book_copy entity)
		{
			this.SendPropertyChanging();
			entity.book_status = this;
		}
		
		private void detach_book_copies(book_copy entity)
		{
			this.SendPropertyChanging();
			entity.book_status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.course")]
	public partial class course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _course_id;
		
		private string _course_name;
		
		private EntitySet<student> _students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncourse_idChanging(string value);
    partial void Oncourse_idChanged();
    partial void Oncourse_nameChanging(string value);
    partial void Oncourse_nameChanged();
    #endregion
		
		public course()
		{
			this._students = new EntitySet<student>(new Action<student>(this.attach_students), new Action<student>(this.detach_students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string course_name
		{
			get
			{
				return this._course_name;
			}
			set
			{
				if ((this._course_name != value))
				{
					this.Oncourse_nameChanging(value);
					this.SendPropertyChanging();
					this._course_name = value;
					this.SendPropertyChanged("course_name");
					this.Oncourse_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_student", Storage="_students", ThisKey="course_id", OtherKey="course_id")]
		public EntitySet<student> students
		{
			get
			{
				return this._students;
			}
			set
			{
				this._students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.course = this;
		}
		
		private void detach_students(student entity)
		{
			this.SendPropertyChanging();
			entity.course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.student")]
	public partial class student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _student_id;
		
		private string _student_name;
		
		private string _contact_number;
		
		private string _course_id;
		
		private EntitySet<attendance> _attendances;
		
		private EntitySet<borrow_transaction> _borrow_transactions;
		
		private EntityRef<course> _course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void Onstudent_nameChanging(string value);
    partial void Onstudent_nameChanged();
    partial void Oncontact_numberChanging(string value);
    partial void Oncontact_numberChanged();
    partial void Oncourse_idChanging(string value);
    partial void Oncourse_idChanged();
    #endregion
		
		public student()
		{
			this._attendances = new EntitySet<attendance>(new Action<attendance>(this.attach_attendances), new Action<attendance>(this.detach_attendances));
			this._borrow_transactions = new EntitySet<borrow_transaction>(new Action<borrow_transaction>(this.attach_borrow_transactions), new Action<borrow_transaction>(this.detach_borrow_transactions));
			this._course = default(EntityRef<course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this.Onstudent_nameChanging(value);
					this.SendPropertyChanging();
					this._student_name = value;
					this.SendPropertyChanged("student_name");
					this.Onstudent_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string contact_number
		{
			get
			{
				return this._contact_number;
			}
			set
			{
				if ((this._contact_number != value))
				{
					this.Oncontact_numberChanging(value);
					this.SendPropertyChanging();
					this._contact_number = value;
					this.SendPropertyChanged("contact_number");
					this.Oncontact_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_course_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string course_id
		{
			get
			{
				return this._course_id;
			}
			set
			{
				if ((this._course_id != value))
				{
					if (this._course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncourse_idChanging(value);
					this.SendPropertyChanging();
					this._course_id = value;
					this.SendPropertyChanged("course_id");
					this.Oncourse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_attendance", Storage="_attendances", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<attendance> attendances
		{
			get
			{
				return this._attendances;
			}
			set
			{
				this._attendances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_borrow_transaction", Storage="_borrow_transactions", ThisKey="student_id", OtherKey="student_id")]
		public EntitySet<borrow_transaction> borrow_transactions
		{
			get
			{
				return this._borrow_transactions;
			}
			set
			{
				this._borrow_transactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="course_student", Storage="_course", ThisKey="course_id", OtherKey="course_id", IsForeignKey=true)]
		public course course
		{
			get
			{
				return this._course.Entity;
			}
			set
			{
				course previousValue = this._course.Entity;
				if (((previousValue != value) 
							|| (this._course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._course.Entity = null;
						previousValue.students.Remove(this);
					}
					this._course.Entity = value;
					if ((value != null))
					{
						value.students.Add(this);
						this._course_id = value.course_id;
					}
					else
					{
						this._course_id = default(string);
					}
					this.SendPropertyChanged("course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_attendances(attendance entity)
		{
			this.SendPropertyChanging();
			entity.student = this;
		}
		
		private void detach_attendances(attendance entity)
		{
			this.SendPropertyChanging();
			entity.student = null;
		}
		
		private void attach_borrow_transactions(borrow_transaction entity)
		{
			this.SendPropertyChanging();
			entity.student = this;
		}
		
		private void detach_borrow_transactions(borrow_transaction entity)
		{
			this.SendPropertyChanging();
			entity.student = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.vw_AvailableBooks")]
	public partial class vw_AvailableBook
	{
		
		private string _book_title;
		
		private string _genre_name;
		
		private string _book_author;
		
		private string _book_copy_id;
		
		private string _room_name;
		
		private string _section_name;
		
		private string _shelf_code;
		
		public vw_AvailableBook()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this._book_title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string genre_name
		{
			get
			{
				return this._genre_name;
			}
			set
			{
				if ((this._genre_name != value))
				{
					this._genre_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_author", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string book_author
		{
			get
			{
				return this._book_author;
			}
			set
			{
				if ((this._book_author != value))
				{
					this._book_author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_copy_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_copy_id
		{
			get
			{
				return this._book_copy_id;
			}
			set
			{
				if ((this._book_copy_id != value))
				{
					this._book_copy_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string room_name
		{
			get
			{
				return this._room_name;
			}
			set
			{
				if ((this._room_name != value))
				{
					this._room_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string section_name
		{
			get
			{
				return this._section_name;
			}
			set
			{
				if ((this._section_name != value))
				{
					this._section_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shelf_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string shelf_code
		{
			get
			{
				return this._shelf_code;
			}
			set
			{
				if ((this._shelf_code != value))
				{
					this._shelf_code = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.vw_visit_log")]
	public partial class vw_visit_log
	{
		
		private string _attendance_id;
		
		private string _student_id;
		
		private string _student_name;
		
		private System.DateTime _date_of_visit;
		
		private System.TimeSpan _time_of_visit;
		
		public vw_visit_log()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attendance_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string attendance_id
		{
			get
			{
				return this._attendance_id;
			}
			set
			{
				if ((this._attendance_id != value))
				{
					this._attendance_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this._student_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this._student_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_visit", DbType="Date NOT NULL")]
		public System.DateTime date_of_visit
		{
			get
			{
				return this._date_of_visit;
			}
			set
			{
				if ((this._date_of_visit != value))
				{
					this._date_of_visit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_of_visit", DbType="Time NOT NULL")]
		public System.TimeSpan time_of_visit
		{
			get
			{
				return this._time_of_visit;
			}
			set
			{
				if ((this._time_of_visit != value))
				{
					this._time_of_visit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.vw_fines_report")]
	public partial class vw_fines_report
	{
		
		private string _fine_id;
		
		private string _borrow_id;
		
		private System.Nullable<decimal> _payment_amount;
		
		private System.DateTime _assessed_date;
		
		private bool _is_paid;
		
		private string _student_id;
		
		public vw_fines_report()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string fine_id
		{
			get
			{
				return this._fine_id;
			}
			set
			{
				if ((this._fine_id != value))
				{
					this._fine_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string borrow_id
		{
			get
			{
				return this._borrow_id;
			}
			set
			{
				if ((this._borrow_id != value))
				{
					this._borrow_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_amount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> payment_amount
		{
			get
			{
				return this._payment_amount;
			}
			set
			{
				if ((this._payment_amount != value))
				{
					this._payment_amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assessed_date", DbType="Date NOT NULL")]
		public System.DateTime assessed_date
		{
			get
			{
				return this._assessed_date;
			}
			set
			{
				if ((this._assessed_date != value))
				{
					this._assessed_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Bit NOT NULL")]
		public bool is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this._is_paid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this._student_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.vw_StudentBorrowHistory")]
	public partial class vw_StudentBorrowHistory
	{
		
		private string _borrow_id;
		
		private string _book_id;
		
		private string _book_title;
		
		private System.Nullable<System.DateTime> _return_date;
		
		private string _is_overdue;
		
		private System.Nullable<decimal> _fine_amount;
		
		public vw_StudentBorrowHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string borrow_id
		{
			get
			{
				return this._borrow_id;
			}
			set
			{
				if ((this._borrow_id != value))
				{
					this._borrow_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_id
		{
			get
			{
				return this._book_id;
			}
			set
			{
				if ((this._book_id != value))
				{
					this._book_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this._book_title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_date", DbType="Date")]
		public System.Nullable<System.DateTime> return_date
		{
			get
			{
				return this._return_date;
			}
			set
			{
				if ((this._return_date != value))
				{
					this._return_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_overdue", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string is_overdue
		{
			get
			{
				return this._is_overdue;
			}
			set
			{
				if ((this._is_overdue != value))
				{
					this._is_overdue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_amount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> fine_amount
		{
			get
			{
				return this._fine_amount;
			}
			set
			{
				if ((this._fine_amount != value))
				{
					this._fine_amount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.vw_OverdueBooks")]
	public partial class vw_OverdueBook
	{
		
		private string _student_id;
		
		private string _student_name;
		
		private string _borrow_id;
		
		private System.DateTime _borrow_date;
		
		private System.Nullable<System.DateTime> _due_date;
		
		private System.Nullable<int> _days_overdue;
		
		private System.Nullable<decimal> _fine_amount;
		
		private string _book_title;
		
		private string _genre_name;
		
		private string _book_author;
		
		private string _book_copy_id;
		
		private string _room_name;
		
		private string _section_name;
		
		private string _shelf_code;
		
		public vw_OverdueBook()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this._student_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string student_name
		{
			get
			{
				return this._student_name;
			}
			set
			{
				if ((this._student_name != value))
				{
					this._student_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string borrow_id
		{
			get
			{
				return this._borrow_id;
			}
			set
			{
				if ((this._borrow_id != value))
				{
					this._borrow_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_date", DbType="Date NOT NULL")]
		public System.DateTime borrow_date
		{
			get
			{
				return this._borrow_date;
			}
			set
			{
				if ((this._borrow_date != value))
				{
					this._borrow_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due_date", DbType="Date")]
		public System.Nullable<System.DateTime> due_date
		{
			get
			{
				return this._due_date;
			}
			set
			{
				if ((this._due_date != value))
				{
					this._due_date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_days_overdue", DbType="Int")]
		public System.Nullable<int> days_overdue
		{
			get
			{
				return this._days_overdue;
			}
			set
			{
				if ((this._days_overdue != value))
				{
					this._days_overdue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_amount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> fine_amount
		{
			get
			{
				return this._fine_amount;
			}
			set
			{
				if ((this._fine_amount != value))
				{
					this._fine_amount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_title", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string book_title
		{
			get
			{
				return this._book_title;
			}
			set
			{
				if ((this._book_title != value))
				{
					this._book_title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string genre_name
		{
			get
			{
				return this._genre_name;
			}
			set
			{
				if ((this._genre_name != value))
				{
					this._genre_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_author", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string book_author
		{
			get
			{
				return this._book_author;
			}
			set
			{
				if ((this._book_author != value))
				{
					this._book_author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_copy_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_copy_id
		{
			get
			{
				return this._book_copy_id;
			}
			set
			{
				if ((this._book_copy_id != value))
				{
					this._book_copy_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string room_name
		{
			get
			{
				return this._room_name;
			}
			set
			{
				if ((this._room_name != value))
				{
					this._room_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string section_name
		{
			get
			{
				return this._section_name;
			}
			set
			{
				if ((this._section_name != value))
				{
					this._section_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shelf_code", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string shelf_code
		{
			get
			{
				return this._shelf_code;
			}
			set
			{
				if ((this._shelf_code != value))
				{
					this._shelf_code = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.fine")]
	public partial class fine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _fine_id;
		
		private string _borrow_id;
		
		private string _payment_id;
		
		private decimal _amount;
		
		private System.DateTime _assessed_date;
		
		private bool _is_paid;
		
		private EntityRef<payment> _payment;
		
		private EntityRef<borrow_transaction> _borrow_transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfine_idChanging(string value);
    partial void Onfine_idChanged();
    partial void Onborrow_idChanging(string value);
    partial void Onborrow_idChanged();
    partial void Onpayment_idChanging(string value);
    partial void Onpayment_idChanged();
    partial void OnamountChanging(decimal value);
    partial void OnamountChanged();
    partial void Onassessed_dateChanging(System.DateTime value);
    partial void Onassessed_dateChanged();
    partial void Onis_paidChanging(bool value);
    partial void Onis_paidChanged();
    #endregion
		
		public fine()
		{
			this._payment = default(EntityRef<payment>);
			this._borrow_transaction = default(EntityRef<borrow_transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string fine_id
		{
			get
			{
				return this._fine_id;
			}
			set
			{
				if ((this._fine_id != value))
				{
					this.Onfine_idChanging(value);
					this.SendPropertyChanging();
					this._fine_id = value;
					this.SendPropertyChanged("fine_id");
					this.Onfine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string borrow_id
		{
			get
			{
				return this._borrow_id;
			}
			set
			{
				if ((this._borrow_id != value))
				{
					if (this._borrow_transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onborrow_idChanging(value);
					this.SendPropertyChanging();
					this._borrow_id = value;
					this.SendPropertyChanged("borrow_id");
					this.Onborrow_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", DbType="VarChar(10)")]
		public string payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					if (this._payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assessed_date", DbType="Date NOT NULL")]
		public System.DateTime assessed_date
		{
			get
			{
				return this._assessed_date;
			}
			set
			{
				if ((this._assessed_date != value))
				{
					this.Onassessed_dateChanging(value);
					this.SendPropertyChanging();
					this._assessed_date = value;
					this.SendPropertyChanged("assessed_date");
					this.Onassessed_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Bit NOT NULL")]
		public bool is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this.Onis_paidChanging(value);
					this.SendPropertyChanging();
					this._is_paid = value;
					this.SendPropertyChanged("is_paid");
					this.Onis_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_fine", Storage="_payment", ThisKey="payment_id", OtherKey="payment_id", IsForeignKey=true)]
		public payment payment
		{
			get
			{
				return this._payment.Entity;
			}
			set
			{
				payment previousValue = this._payment.Entity;
				if (((previousValue != value) 
							|| (this._payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment.Entity = null;
						previousValue.fines.Remove(this);
					}
					this._payment.Entity = value;
					if ((value != null))
					{
						value.fines.Add(this);
						this._payment_id = value.payment_id;
					}
					else
					{
						this._payment_id = default(string);
					}
					this.SendPropertyChanged("payment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="borrow_transaction_fine", Storage="_borrow_transaction", ThisKey="borrow_id", OtherKey="borrow_id", IsForeignKey=true)]
		public borrow_transaction borrow_transaction
		{
			get
			{
				return this._borrow_transaction.Entity;
			}
			set
			{
				borrow_transaction previousValue = this._borrow_transaction.Entity;
				if (((previousValue != value) 
							|| (this._borrow_transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._borrow_transaction.Entity = null;
						previousValue.fines.Remove(this);
					}
					this._borrow_transaction.Entity = value;
					if ((value != null))
					{
						value.fines.Add(this);
						this._borrow_id = value.borrow_id;
					}
					else
					{
						this._borrow_id = default(string);
					}
					this.SendPropertyChanged("borrow_transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.payment")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _payment_id;
		
		private string _fine_id;
		
		private string _payment_desc;
		
		private System.DateTime _payment_date;
		
		private decimal _payment_amount;
		
		private EntitySet<fine> _fines;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(string value);
    partial void Onpayment_idChanged();
    partial void Onfine_idChanging(string value);
    partial void Onfine_idChanged();
    partial void Onpayment_descChanging(string value);
    partial void Onpayment_descChanged();
    partial void Onpayment_dateChanging(System.DateTime value);
    partial void Onpayment_dateChanged();
    partial void Onpayment_amountChanging(decimal value);
    partial void Onpayment_amountChanged();
    #endregion
		
		public payment()
		{
			this._fines = new EntitySet<fine>(new Action<fine>(this.attach_fines), new Action<fine>(this.detach_fines));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fine_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string fine_id
		{
			get
			{
				return this._fine_id;
			}
			set
			{
				if ((this._fine_id != value))
				{
					this.Onfine_idChanging(value);
					this.SendPropertyChanging();
					this._fine_id = value;
					this.SendPropertyChanged("fine_id");
					this.Onfine_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_desc", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string payment_desc
		{
			get
			{
				return this._payment_desc;
			}
			set
			{
				if ((this._payment_desc != value))
				{
					this.Onpayment_descChanging(value);
					this.SendPropertyChanging();
					this._payment_desc = value;
					this.SendPropertyChanged("payment_desc");
					this.Onpayment_descChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="Date NOT NULL")]
		public System.DateTime payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_amount", DbType="Decimal(10,2) NOT NULL")]
		public decimal payment_amount
		{
			get
			{
				return this._payment_amount;
			}
			set
			{
				if ((this._payment_amount != value))
				{
					this.Onpayment_amountChanging(value);
					this.SendPropertyChanging();
					this._payment_amount = value;
					this.SendPropertyChanged("payment_amount");
					this.Onpayment_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_fine", Storage="_fines", ThisKey="payment_id", OtherKey="payment_id")]
		public EntitySet<fine> fines
		{
			get
			{
				return this._fines;
			}
			set
			{
				this._fines.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fines(fine entity)
		{
			this.SendPropertyChanging();
			entity.payment = this;
		}
		
		private void detach_fines(fine entity)
		{
			this.SendPropertyChanging();
			entity.payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="NorthvilleLibrary.borrow_transaction")]
	public partial class borrow_transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _borrow_id;
		
		private string _student_id;
		
		private string _book_copy_id;
		
		private System.DateTime _borrow_date;
		
		private System.Nullable<System.DateTime> _return_date;
		
		private string _borrow_status;
		
		private EntitySet<fine> _fines;
		
		private EntityRef<book_copy> _book_copy;
		
		private EntityRef<student> _student;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onborrow_idChanging(string value);
    partial void Onborrow_idChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void Onbook_copy_idChanging(string value);
    partial void Onbook_copy_idChanged();
    partial void Onborrow_dateChanging(System.DateTime value);
    partial void Onborrow_dateChanged();
    partial void Onreturn_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onreturn_dateChanged();
    partial void Onborrow_statusChanging(string value);
    partial void Onborrow_statusChanged();
    #endregion
		
		public borrow_transaction()
		{
			this._fines = new EntitySet<fine>(new Action<fine>(this.attach_fines), new Action<fine>(this.detach_fines));
			this._book_copy = default(EntityRef<book_copy>);
			this._student = default(EntityRef<student>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_id", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string borrow_id
		{
			get
			{
				return this._borrow_id;
			}
			set
			{
				if ((this._borrow_id != value))
				{
					this.Onborrow_idChanging(value);
					this.SendPropertyChanging();
					this._borrow_id = value;
					this.SendPropertyChanged("borrow_id");
					this.Onborrow_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					if (this._student.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_copy_id", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string book_copy_id
		{
			get
			{
				return this._book_copy_id;
			}
			set
			{
				if ((this._book_copy_id != value))
				{
					if (this._book_copy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbook_copy_idChanging(value);
					this.SendPropertyChanging();
					this._book_copy_id = value;
					this.SendPropertyChanged("book_copy_id");
					this.Onbook_copy_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_date", DbType="Date NOT NULL")]
		public System.DateTime borrow_date
		{
			get
			{
				return this._borrow_date;
			}
			set
			{
				if ((this._borrow_date != value))
				{
					this.Onborrow_dateChanging(value);
					this.SendPropertyChanging();
					this._borrow_date = value;
					this.SendPropertyChanged("borrow_date");
					this.Onborrow_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_return_date", DbType="Date")]
		public System.Nullable<System.DateTime> return_date
		{
			get
			{
				return this._return_date;
			}
			set
			{
				if ((this._return_date != value))
				{
					this.Onreturn_dateChanging(value);
					this.SendPropertyChanging();
					this._return_date = value;
					this.SendPropertyChanged("return_date");
					this.Onreturn_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_borrow_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string borrow_status
		{
			get
			{
				return this._borrow_status;
			}
			set
			{
				if ((this._borrow_status != value))
				{
					this.Onborrow_statusChanging(value);
					this.SendPropertyChanging();
					this._borrow_status = value;
					this.SendPropertyChanged("borrow_status");
					this.Onborrow_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="borrow_transaction_fine", Storage="_fines", ThisKey="borrow_id", OtherKey="borrow_id")]
		public EntitySet<fine> fines
		{
			get
			{
				return this._fines;
			}
			set
			{
				this._fines.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="book_copy_borrow_transaction", Storage="_book_copy", ThisKey="book_copy_id", OtherKey="book_copy_id", IsForeignKey=true)]
		public book_copy book_copy
		{
			get
			{
				return this._book_copy.Entity;
			}
			set
			{
				book_copy previousValue = this._book_copy.Entity;
				if (((previousValue != value) 
							|| (this._book_copy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._book_copy.Entity = null;
						previousValue.borrow_transactions.Remove(this);
					}
					this._book_copy.Entity = value;
					if ((value != null))
					{
						value.borrow_transactions.Add(this);
						this._book_copy_id = value.book_copy_id;
					}
					else
					{
						this._book_copy_id = default(string);
					}
					this.SendPropertyChanged("book_copy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="student_borrow_transaction", Storage="_student", ThisKey="student_id", OtherKey="student_id", IsForeignKey=true)]
		public student student
		{
			get
			{
				return this._student.Entity;
			}
			set
			{
				student previousValue = this._student.Entity;
				if (((previousValue != value) 
							|| (this._student.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._student.Entity = null;
						previousValue.borrow_transactions.Remove(this);
					}
					this._student.Entity = value;
					if ((value != null))
					{
						value.borrow_transactions.Add(this);
						this._student_id = value.student_id;
					}
					else
					{
						this._student_id = default(string);
					}
					this.SendPropertyChanged("student");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_fines(fine entity)
		{
			this.SendPropertyChanging();
			entity.borrow_transaction = this;
		}
		
		private void detach_fines(fine entity)
		{
			this.SendPropertyChanging();
			entity.borrow_transaction = null;
		}
	}
}
#pragma warning restore 1591
