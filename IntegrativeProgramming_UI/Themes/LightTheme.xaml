<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Color Palette -->

    
    <Color x:Key="LightBackground">#f5f7fa</Color>
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource DarkBackground}" />
    <Color x:Key="MediumBackground">#ffffff</Color>
    <Color x:Key="HoverBackground">#e2e8f0</Color>

  
    <Color x:Key="LightPanel">#ffffff</Color>
    <Color x:Key="LightText">#2d3748</Color>
    <Color x:Key="LightAccent">#3182ce</Color>
    <Color x:Key="LightSecondary">#4299e1</Color>

    
    <!-- Accent Colors -->
    <Color x:Key="PrimaryAccent">#3182ce</Color>
    <Color x:Key="PrimaryAccentHover">#2b6cb0</Color>
    <Color x:Key="SecondaryAccent">#4299e1</Color>
    <Color x:Key="PurpleAccent">#6A5ACD</Color>
    <Color x:Key="OrangeAccent">#dd6b20</Color>
    <Color x:Key="DangerAccent">#e53e3e</Color>

    <!-- Text Colors -->
    <Color x:Key="PrimaryTextColor">#2d3748</Color>
    <Color x:Key="SecondaryTextColor">#718096</Color>

    <!-- Brush Resources -->
    <SolidColorBrush x:Key="DarkBackgroundBrush" Color="{StaticResource DarkBackground}"/>
    <SolidColorBrush x:Key="MediumBackgroundBrush" Color="{StaticResource MediumBackground}"/>
    <SolidColorBrush x:Key="LightBackgroundBrush" Color="{StaticResource LightBackground}"/>
    <SolidColorBrush x:Key="HoverBackgroundBrush" Color="{StaticResource HoverBackground}"/>

    <SolidColorBrush x:Key="PrimaryAccentBrush" Color="{StaticResource PrimaryAccent}"/>
    <SolidColorBrush x:Key="PrimaryAccentHoverBrush" Color="{StaticResource PrimaryAccentHover}"/>
    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource SecondaryAccent}"/>
    <SolidColorBrush x:Key="PurpleAccentBrush" Color="{StaticResource PurpleAccent}"/>
    <SolidColorBrush x:Key="OrangeAccentBrush" Color="{StaticResource OrangeAccent}"/>
    <SolidColorBrush x:Key="DangerAccentBrush" Color="{StaticResource DangerAccent}"/>

    <SolidColorBrush x:Key="PrimaryTextBrush" Color="{StaticResource PrimaryTextColor}"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource SecondaryTextColor}"/>

    <!-- Button Styles -->

    <!-- Standard Button Style -->
    <Style x:Key="StandardButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource LightBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e2e8f0"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#cbd5e0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Accent Button Style -->
    <Style x:Key="AccentButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryAccentHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryAccentBrush}"/>
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Secondary Accent Button Style -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource SecondaryAccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#2b6cb0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource SecondaryAccentBrush}"/>
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Danger Button Style -->
    <Style x:Key="DangerButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource DangerAccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#c53030"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource DangerAccentBrush}"/>
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Button Style -->
    <Style x:Key="IconButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#cbd5e0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Sidebar Button Style -->
    <Style x:Key="SidebarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Margin" Value="0,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#cbd5e0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Action Button Style -->
    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center" 
                                      Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#cbd5e0"/>
                            <Setter Property="Opacity" Value="0.9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Custom Border Styles -->
    <Style x:Key="CardBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#e2e8f0"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="StatsCardStyle" TargetType="Border">
        <Setter Property="Background" Value="#edf2f7"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Width" Value="125"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!-- TextBlock Styles -->
    <Style x:Key="HeadingTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="SubheadingTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
    </Style>

    <Style x:Key="StatsValueTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="StatsLabelTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="10"/>
    </Style>

    <!-- DataGrid Styles -->
    <Style x:Key="LightDataGridStyle" TargetType="DataGrid">
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
        <Setter Property="RowBackground" Value="Transparent"/>
        <Setter Property="AlternatingRowBackground" Value="#f7fafc"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#e2e8f0"/>
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="Padding" Value="10,4"/>
        <Setter Property="Margin" Value="4,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- TextBox Style -->
    <Style x:Key="LightTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="#e2e8f0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                 Focusable="False" 
                                 HorizontalScrollBarVisibility="Hidden" 
                                 VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource SecondaryAccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Style -->
    <Style x:Key="LightComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="#e2e8f0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,5"/>
        <Setter Property="Margin" Value="0,5"/>
    </Style>

    <!-- CheckBox Style -->
    <Style x:Key="LightCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="Margin" Value="0,5"/>
    </Style>

    <!-- ListBox Style -->
    <Style x:Key="LightListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="#e2e8f0"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>

    <!-- Label Style -->
    <Style x:Key="FormLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="Margin" Value="0,5,0,2"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <!-- StackPanel Form Group Style -->
    <Style x:Key="FormGroupStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="0,0,0,15"/>
    </Style>

    <!-- Form Field Styles -->
    <Style x:Key="FormFieldContainerStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource MediumBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="#e2e8f0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="0,5,0,10"/>
    </Style>

    <Style x:Key="FormFieldLabelStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="FormFieldRequiredMarkerStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource DangerAccentBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="2,0,0,0"/>
    </Style>

    <Style x:Key="FormFieldHelpTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,3,0,0"/>
    </Style>

    <Style x:Key="FormFieldErrorTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource DangerAccentBrush}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,3,0,0"/>
    </Style>

    <Style x:Key="FormSubmitButtonStyle" TargetType="Button" BasedOn="{StaticResource AccentButtonStyle}">
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Padding" Value="20,10"/>
    </Style>

    <Style x:Key="FormCancelButtonStyle" TargetType="Button" BasedOn="{StaticResource StandardButtonStyle}">
        <Setter Property="Margin" Value="0,10,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Padding" Value="20,10"/>
    </Style>

    
</ResourceDictionary>